<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawn_wait_frames = 140;
spawn_distance_from_player = 120;
maxEnemies = 2;
state = 0;
counter = spawn_wait_frames;
enemyType = obj_enemy_basic_spawn;
unlimited = true;
spawn_right = 0;
spawn_right = true;
visible = false;
spawn_height = y + (image_yscale - 1) * 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//playerXDistance = abs(player.x - x);


switch(state){
    case 0:{
        if (place_meeting(x, y, player)){
            state = 1;
            sprite_index = spr_spawner;
            counter = spawn_wait_frames;
        }
    }
    break;
    case 1:{
        counter++;
        if (!place_meeting(x, y, player)){
            state = 0;
            sprite_index = sprite2;
        }
        else if (instance_number(enemyType) &lt; maxEnemies){
            if (counter &gt;= spawn_wait_frames){
                spawn_xposition = spawn_distance_from_player;
                if (!spawn_right){
                    spawn_xposition *= -1;
                }
                spawn_xposition += player.x;
                
                nextEnemy = instance_create(spawn_xposition, spawn_height, enemyType);
                //nextEnemy.pause_frames = 20;
                counter = 0;
            }
                //show_debug_message("enemy " + string(numEnemies));
        }
        else {
            counter = 0;
        }
    }
    break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
