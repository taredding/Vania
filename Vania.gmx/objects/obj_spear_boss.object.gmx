<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spear_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
hp = 40;
invuln_frames = 0;
max_invuln_frames = 15;
frames_between_attacks = 90;
num_v_spears = 4;
//veritcal spears;
pause_frames = 60;
num_attacks = 0;
max_attacks = 4;
for (i = 0; i &lt; num_v_spears ; i++){
    v_spear[i] = instance_create(32 + i * 40, 8, obj_spear_giant_vertical);
}
h_spear[1] = instance_create(x, 240, obj_spear_giant_horizontal);
h_spear[0] = instance_create(x, 214, obj_spear_giant_horizontal);
prev_h_spear = -1;
prev_v_spear = -1;
next_h_spear = prev_h_spear;
next_v_spear = prev_v_spear;
randomize();
attack_stage = 0;

//attack 0
prev_h_spear = -1;
next_h_spear = -1;

//attack 2
v_attack = false;
prev_safe_spear = -1;
safe_spear = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>script_invuln_handler</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!pause_frames){
    image_index = 0;
    if (num_attacks &lt; max_attacks){
        switch (attack_stage){
            case 0:{
                if (prev_h_spear == 1){
                    next_h_spear = 0;
                }
                else {
                    next_h_spear = 1;
                }
                h_spear[next_h_spear].is_active = true;
                num_attacks++;
                pause_frames = 60;
                prev_h_spear = next_h_spear;
                break;
            }
            case 1:{

                    if(irandom(1)) {
                        next_v_spear = max(0, min(script_nearest_v_spear() - 1 + irandom(2), 3));

                    }
                    else {
                        next_v_spear = script_nearest_v_spear();
                    } 
                    next_h_spear = sign(irandom(2));
                    v_spear[next_v_spear].is_active = true;
                    h_spear[1].is_active = true;
                    num_attacks++;
                    prev_v_spear = next_v_spear;
                    pause_frames = frames_between_attacks;
                break;
            }
            
            case 2:{
                if (!v_attack){
                    pause_frames = 20;
                    for (i = 0; i &lt; num_v_spears; i++){
                        v_spear[i].is_active = true;
                        v_spear[i].ground_pause = true;
                    }
                    near_spear = script_nearest_v_spear();
                    while (prev_safe_spear == safe_spear){
                        if (near_spear == 3){
                            safe_spear = irandom(1) + 2;
                        }
                        else if (near_spear == 0){
                            safe_spear = irandom(1);
                        }
                        else if (near_spear == 1){
                            safe_spear = irandom(2);
                        }
                        else{
                            safe_spear = irandom(2) + 1;
                        }
                    }
                    prev_safe_spear = safe_spear;
                    v_spear[safe_spear].is_active = false;
                    v_attack = true;
                    //v_spear[safe_spear].ground_pause = false;
                }
                else {
                    v_attack = false;
                    h_spear[irandom(1)].is_active = true;
                    num_attacks++;
                    pause_frames = 100;
                }
                //v_spear[prev_v_spear].is_active = true;
                
            }
        }

    }
    else {
        num_attacks = 0;
        image_index = 1;
        pause_frames = 180;
    }
}
else {
    pause_frames--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="whipper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!invuln_frames){
    if (image_index == 1){
        hp--;
        invuln_frames = max_invuln_frames;
        if (hp &lt;= 0){
            instance_create(x, y, obj_warp);
            instance_destroy();
        }
        else if (hp == 30 || hp == 15){
            attack_stage++;
            max_attacks += 4; 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x - 48, y - 100, "HP: " + string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
