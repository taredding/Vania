<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_bat_flying</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>test_point = script_new_point(player.x, player.y);
hp = 5;
image_speed = .4;
max_distance = 96;
half_distance = max_distance / 2;
swoop_point[0] = script_new_point(x - max_distance, 88);
swoop_point[1] = script_new_point(x - max_distance, player.y / 2);
swoop_point[2] = script_new_point(x - half_distance, player.y);
swoop_point[3] = script_new_point(x + half_distance, player.y);
swoop_point[4] = script_new_point(x + max_distance, player.y / 2);
swoop_point[5] = script_new_point(x + max_distance, 88);
swoop_index = 0;
dir = 1;
invuln_frames = 0;
max_invuln_frames = 60;
x = x - max_distance;
pause_frames = 40;

touch_damage = true;

//swoop
num_swoops = 0;
max_swoops = 3;
swoop_pause = 30;
state_swoop = 1;
state = 1;
swoop_speed = 6;

//perch
state_perch = 2;
perch_point = script_new_point(216, 120);
num_shots = 0;
max_shots = 16;

//zigzag
state_zig_zag = 3;
half_distance = max_distance / 2;
zag_point[0] = script_new_point(x, 88);
zag_point[1] = script_new_point(x + half_distance, player.y);
zag_point[2] = script_new_point(x +  max_distance, player.y - 128);
zag_point[3] = script_new_point(x + 1.5 * max_distance, player.y);
zag_point[4] = script_new_point(x + 2 * max_distance, player.y - 128);

zag_index = 0;
dir = 1;
num_zags = 0;
max_zags = 2;
zag_speed = 4;

//ranged attack swoop
next_type = 0;
state_ranged_swoop = 4;
ranged_swoop_point[0] = script_new_point(x, 88);
ranged_swoop_point[1] = script_new_point(x + half_distance, 120);
ranged_swoop_point[2] = script_new_point(x + 3 * half_distance, 120);
ranged_swoop_point[3] = script_new_point(x + 2 * max_distance, 88);
ranged_swoop_speed = 2;
ranged_swoop_index = 0;
frames_between_ranged_attacks = 15;
frames_before_ranged = frames_between_ranged_attacks;
max_ranged_swoops = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>script_invuln_handler</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_fire_switch) &amp;&amp; obj_fire_switch.visible &amp;&amp; !invuln_frames){
    hp--;
    num_shots = 0;
    if (state = state_perch){ 
        state++;
    }
    dir = -1;
    invuln_frames = max_invuln_frames;
    pause_frames = invuln_frames - 10;
    if (hp &lt;= 0){
        instance_create(player.x, player.y, obj_warp);
        instance_destroy();
    }
}

if (place_meeting(x, y, player) || place_meeting(x, y, whipper) || place_meeting(x, y, obj_e_whipper)){
    script_player_damage();
}

if (!pause_frames){
    switch(state){
        case state_swoop:{
            script_swoop_to(swoop_point[swoop_index], swoop_speed);
            if (dir == 1 &amp;&amp; x == swoop_point[swoop_index].xpos || dir == -1 &amp;&amp; x == swoop_point[swoop_index].xpos){
                swoop_index += dir;
                if (swoop_index &gt; 5 || swoop_index &lt; 0){
                    swoop_index -= dir;
                    dir *= -1;
                    num_swoops++;
                    pause_frames = swoop_pause;
                    if (num_swoops &gt;= max_swoops){
                        state++;
                        num_swoops = 0;
                    }
                }
                
            }
            break;
        }
        case (state_perch):{
            if (x != perch_point.xpos || y != perch_point.ypos){
                script_swoop_to(perch_point, 2);
            }
            else {
                next_attack = instance_create(x, y, obj_weapon_shoot);
                if (num_shots % 2 == 0){
                    with (next_attack){
                        destination.xpos += (irandom(2) - 1) * 32;
                    }
                }
                    
                else{
                    with(next_attack){
                        destination.xpos = 192;
                        destination.ypos = 248
                    }
                }
                pause_frames = 50;

                num_shots ++;
                if (num_shots &gt;= max_shots){
                    num_shots = 0; 
                    state++;
                    pause_frames = 90;
                    dir = -1;
                }
                //show_debug_message("shoot");
            }
            break;
        }
        
        case(state_zig_zag):{
            script_swoop_to(zag_point[zag_index], zag_speed);
            if (dir == 1 &amp;&amp; x &gt;= zag_point[zag_index].xpos || dir == -1 &amp;&amp; x &lt;= zag_point[zag_index].xpos){
                zag_index += dir;
                if (zag_index == 3 &amp;&amp; dir = 1 || zag_index == 1 &amp;&amp; dir == -1){
                    next_attack = instance_create(x, y, obj_weapon_shoot);

                }
                else if (zag_index &gt; 4 || zag_index &lt; 0){
                    instance_create(x, y, obj_weapon_shoot);
                    zag_index = max(0, min(zag_index, 4));
                    dir *= -1;
                    num_zags++;
                    pause_frames = swoop_pause;
                    if (num_zags &gt;= max_zags){
                        state++;
                        pause_frames = 40;
                        num_zags = 0;
                        num_swoops = 0;
                    }
                }
                
            }
            break;
        }
        case (state_ranged_swoop):{
            script_swoop_to(ranged_swoop_point[ranged_swoop_index], ranged_swoop_speed);
            if (frames_before_ranged){
                frames_before_ranged--;
            }
            else {
                frames_before_ranged = frames_between_ranged_attacks;
                if (next_type == 0){
                    next_type = 1;
                    instance_create(x, y, obj_weapon_shoot);
                }
                else {
                next_type = 0;
                    instance_create(x, y, obj_weapon_drop);
                }
                pause_frames = 22;
            }
            if (dir == 1 &amp;&amp; x &gt;= ranged_swoop_point[ranged_swoop_index].xpos || dir == -1 &amp;&amp; x &lt;= ranged_swoop_point[ranged_swoop_index].xpos){
                ranged_swoop_index += dir;
                if (ranged_swoop_index &gt; 3 || ranged_swoop_index &lt; 0){
                    ranged_swoop_index = max(0, min(ranged_swoop_index, 3));
                    dir *= -1;
                    //num_zags++;
                    pause_frames = swoop_pause;
                    num_swoops++;
                    if (num_swoops &gt;= max_ranged_swoops){
                        state = 1;
                        pause_frames = 40;
                        num_swoops = 0;
                        ranged_swoop_index = 0;
                    }
                }
                
            }
        }
    }
}
else {
    pause_frames--;
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(view_xview, view_yview + 80, "HP: " + string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
