<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hook_technical</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_distance = 64;
swing_wait_max = 18;

sprite_index = spr_hook;

half_distance = max_distance / 2;
is_swinging = false;
swing_direction = 0;
wait_frames = 0;
for (i = 0; i &lt; 5; i++){
    swing_xposition[i] = ((x - max_distance) + (i * half_distance));
}
swing_yposition[0] = y;
swing_yposition[1] = y + half_distance;
swing_yposition[2] = y + max_distance;
swing_yposition[3] = swing_yposition[1];
swing_yposition[4] = swing_yposition[0];

swing_wait[0] = swing_wait_max;
swing_wait[1] = swing_wait[0] / 2;
swing_wait[2] = swing_wait[0] / 4;
swing_wait[3] = swing_wait[1];
swing_wait[4] = swing_wait[0];
swing_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (is_swinging){    
    if (player.key_swing){
        //if (!player.can_move){
            if (wait_frames){
                wait_frames--;
            }
            else{
                swing_index += swing_direction;
                if (swing_index &lt; 0){
                    swing_index = 1;
                    swing_direction *= -1;
                }
                else if (swing_index &gt; 4){
                    swing_index = 3;
                    swing_direction *= -1;
                }
                wait_frames = swing_wait[swing_index];
            }
            player.x = swing_xposition[swing_index];
            player.y = swing_yposition[swing_index];
        //}
    }
    else {
        wait_frames = 0;
        player.can_move = true;
        is_swinging = false;
        player.hsp = 2 * swing_direction;
        player.vsp = swing_direction * (2 - swing_index);
        if (swing_index = 4 || swing_index = 0){
            player.vsp /= 2;
            player.hsp /= 2;
        }
        player.image_blend = c_white;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="whipper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player.can_move = false;
is_swinging = true;
swing_direction = sign(x - player.x);
if (swing_direction &lt; 0){
    swing_index = 4
}
else {
    swing_index = 0;
}
wait_frames = swing_wait[swing_index];
player.sprite_index = spr_player_idle;
player.image_index = 0;
player.isAttacking = false;
player.attackAvailable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_e_whipper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player.can_move = false;
is_swinging = true;
swing_direction = sign(x - player.x);
if (swing_direction &lt; 0){
    swing_index = 4
}
else {
    swing_index = 0;
}
wait_frames = swing_wait[swing_index];
player.sprite_index = spr_player_idle;
player.image_index = 0;
player.isAttacking = false;
player.attackAvailable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>is_swinging</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>513</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_line</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>player.x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>player.y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
